/*
 * created : Nov 18, 2011
 * by : Latief
 */

/*
 * PanelCellPerson.java
 *
 * Created on Nov 18, 2011, 1:21:50 PM
 */
package com.secondstack.swing.table;

/**
 *
 * @author Latief
 */
public class PanelCellNumber extends PanelCell {

    /** Creates new form PanelCellPerson */
    public PanelCellNumber() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField = new javax.swing.JFormattedTextField();

        textField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        textField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textField, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField textField;
    // End of variables declaration//GEN-END:variables
    Number number;

    @Override
    public Object getValue() {
        if (number instanceof Float) {
            if (number == null) {
                number = 0F;
            }
            number = Float.parseFloat(textField.getText());
        }
        if (number instanceof Double) {
            if (number == null) {
                number = 0D;
            }
            number = Double.parseDouble(textField.getText());
        }
        if (number instanceof Integer) {
            if (number == null) {
                number = 0;
            }
            number = Integer.parseInt(textField.getText());
        }
        if (number instanceof Long) {
            if (number == null) {
                number = 0L;
            }
            number = Long.parseLong(textField.getText());
        }
        if (number instanceof Short) {
            if (number == null) {
                number = new Short("0");
            }
            number = Short.parseShort(textField.getText());
        }

        return number;
    }

    @Override
    public void setValue(Object value) {
        this.number = (Number) value;
        if (number != null) {
            textField.setText(number + "");
        }
    }

    @Override
    public void requestDefaultFocusComponent() {
    }
}
